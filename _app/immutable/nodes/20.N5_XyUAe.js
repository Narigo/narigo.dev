import{s as F,e as B,b as k,d as N,f as K,p as U,j as C,i as _,k as w,l as b,t as T,h as S}from"../chunks/scheduler.Ct-hQNXS.js";import{S as H,i as I,c,b as m,m as p,t as g,a as d,d as h}from"../chunks/index.DAUMTxUj.js";import{C as L}from"../chunks/Code.x-nWcPNg.js";import{C as j}from"../chunks/CodeBlock.BGITJQPq.js";import{N as E}from"../chunks/Narigo.BkWV0FXI.js";import{K as O}from"../chunks/KataLayout.bYLJtPia.js";function P(i){let t;return{c(){t=T("filter().length > 1")},l(e){t=S(e,"filter().length > 1")},m(e,r){w(e,t,r)},d(e){e&&_(t)}}}function z(i){let t,e,r,s;return e=new L({props:{$$slots:{default:[P]},$$scope:{ctx:i}}}),{c(){t=T("The easy "),c(e.$$.fragment),r=T(` solution is not performant enough for the tests to
			work. Two sets worked better.`)},l(n){t=S(n,"The easy "),m(e.$$.fragment,n),r=S(n,` solution is not performant enough for the tests to
			work. Two sets worked better.`)},m(n,u){w(n,t,u),p(e,n,u),w(n,r,u),s=!0},p(n,u){const f={};u&4&&(f.$$scope={dirty:u,ctx:n}),e.$set(f)},i(n){s||(g(e.$$.fragment,n),s=!0)},o(n){d(e.$$.fragment,n),s=!1},d(n){n&&(_(t),_(r)),h(e,n)}}}function D(i){let t;return{c(){t=T("This is walking through the array to find the first that's not unique.")},l(e){t=S(e,"This is walking through the array to find the first that's not unique.")},m(e,r){w(e,t,r)},d(e){e&&_(t)}}}function G(i){let t,e,r="Find the unique number",s,n,u,f,v,l,x,$,q;return n=new j({props:{code:i[0]}}),f=new E({props:{$$slots:{default:[z]},$$scope:{ctx:i}}}),l=new j({props:{code:i[1]}}),$=new E({props:{$$slots:{default:[D]},$$scope:{ctx:i}}}),{c(){t=B("section"),e=B("h3"),e.textContent=r,s=k(),c(n.$$.fragment),u=k(),c(f.$$.fragment),v=k(),c(l.$$.fragment),x=k(),c($.$$.fragment)},l(a){t=N(a,"SECTION",{});var o=K(t);e=N(o,"H3",{"data-svelte-h":!0}),U(e)!=="svelte-ji7hoc"&&(e.textContent=r),s=C(o),m(n.$$.fragment,o),u=C(o),m(f.$$.fragment,o),v=C(o),m(l.$$.fragment,o),x=C(o),m($.$$.fragment,o),o.forEach(_)},m(a,o){w(a,t,o),b(t,e),b(t,s),p(n,t,null),b(t,u),p(f,t,null),b(t,v),p(l,t,null),b(t,x),p($,t,null),q=!0},p(a,o){const y={};o&4&&(y.$$scope={dirty:o,ctx:a}),f.$set(y);const A={};o&4&&(A.$$scope={dirty:o,ctx:a}),$.$set(A)},i(a){q||(g(n.$$.fragment,a),g(f.$$.fragment,a),g(l.$$.fragment,a),g($.$$.fragment,a),q=!0)},o(a){d(n.$$.fragment,a),d(f.$$.fragment,a),d(l.$$.fragment,a),d($.$$.fragment,a),q=!1},d(a){a&&_(t),h(n),h(f),h(l),h($)}}}function J(i){let t,e;return t=new O({props:{id:"585d7d5adb20cf33cb000235",name:"Find the unique number",$$slots:{default:[G]},$$scope:{ctx:i}}}),{c(){c(t.$$.fragment)},l(r){m(t.$$.fragment,r)},m(r,s){p(t,r,s),e=!0},p(r,[s]){const n={};s&4&&(n.$$scope={dirty:s,ctx:r}),t.$set(n)},i(r){e||(g(t.$$.fragment,r),e=!0)},o(r){d(t.$$.fragment,r),e=!1},d(r){h(t,r)}}}function M(i){return[`function findUniq(arr) {
    const [a, b, c] = arr;
    const [uniqA, uniqB] = new Set(arr);
    if (uniqA === a && (uniqA === b || uniqA === c)) return uniqB;
    return uniqA;
  }`,`function findUniq(arr) {
  const [a, b, c] = arr;
  if (a !== b && b === c) return a;
  if (a !== c && a === c) return b;
  
  for (let i = arr.length - 1; i > 0; --i) {
    if (arr[i] !== a) return arr[i];
  }
}`]}class Z extends H{constructor(t){super(),I(this,t,M,J,F,{})}}export{Z as component};
