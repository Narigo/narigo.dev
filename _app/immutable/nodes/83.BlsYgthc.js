import{s as Wn,e as $,b as k,t as a,d,p as T,j as I,f as y,h as r,i as f,q as C,k as c,l as s,n as Mn}from"../chunks/scheduler.Ct-hQNXS.js";import{S as Fn,i as Nn,c as h,b as m,m as p,t as g,a as _,d as v}from"../chunks/index.DAUMTxUj.js";import{b as An}from"../chunks/paths.vMwQToBo.js";import{N as Dn}from"../chunks/Narigo.BkWV0FXI.js";import{C as b}from"../chunks/Code.x-nWcPNg.js";import{P as Vn}from"../chunks/PageLayout.QamgQOGr.js";function Un(i){let t;return{c(){t=a(`To remember more of the little things I learn, I want to write them down. I'll update this page
		whenever I find something worth to log. Most of this will be around web development, but I don't
		want to limit myself to that. Let's see where this leads to.`)},l(e){t=r(e,`To remember more of the little things I learn, I want to write them down. I'll update this page
		whenever I find something worth to log. Most of this will be around web development, but I don't
		want to limit myself to that. Let's see where this leads to.`)},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function jn(i){let t;return{c(){t=a("srcdoc")},l(e){t=r(e,"srcdoc")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function Jn(i){let t;return{c(){t=a("iframe")},l(e){t=r(e,"iframe")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function Qn(i){let t;return{c(){t=a("contentWindow.write")},l(e){t=r(e,"contentWindow.write")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function On(i){let t,e="{ height: 100% }",o;return{c(){t=a("html,body "),o=a(e)},l(w){t=r(w,"html,body "),o=r(w,e)},m(w,H){c(w,t,H),c(w,o,H)},p:Mn,d(w){w&&(f(t),f(o))}}}function Rn(i){let t,e="{ ... }",o;return{c(){t=a("for (const c of string) "),o=a(e)},l(w){t=r(w,"for (const c of string) "),o=r(w,e)},m(w,H){c(w,t,H),c(w,o,H)},p:Mn,d(w){w&&(f(t),f(o))}}}function Gn(i){let t;return{c(){t=a("string.split('')")},l(e){t=r(e,"string.split('')")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function Kn(i){let t;return{c(){t=a("string.map()")},l(e){t=r(e,"string.map()")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function Xn(i){let t;return{c(){t=a("string.filter()")},l(e){t=r(e,"string.filter()")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function Yn(i){let t;return{c(){t=a(".github")},l(e){t=r(e,".github")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function Zn(i){let t;return{c(){t=a(":invalid")},l(e){t=r(e,":invalid")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function es(i){let t;return{c(){t=a("clone")},l(e){t=r(e,"clone")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function ts(i){let t;return{c(){t=a("-webkit-box-decoration-break")},l(e){t=r(e,"-webkit-box-decoration-break")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function ns(i){let t;return{c(){t=a('NODE_ENV="development"')},l(e){t=r(e,'NODE_ENV="development"')},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function ss(i){let t;return{c(){t=a("pnpm install --dev")},l(e){t=r(e,"pnpm install --dev")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function ls(i){let t;return{c(){t=a("devDependencies")},l(e){t=r(e,"devDependencies")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function os(i){let t;return{c(){t=a("pnpm install --prod")},l(e){t=r(e,"pnpm install --prod")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function as(i){let t;return{c(){t=a("dependencies")},l(e){t=r(e,"dependencies")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function rs(i){let t;return{c(){t=a("pnpm install --prod=false")},l(e){t=r(e,"pnpm install --prod=false")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function is(i){let t;return{c(){t=a("+layout@.svelte")},l(e){t=r(e,"+layout@.svelte")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function fs(i){let t;return{c(){t=a("+layout.server.ts")},l(e){t=r(e,"+layout.server.ts")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function $s(i){let t;return{c(){t=a("+layout@.server.ts")},l(e){t=r(e,"+layout@.server.ts")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function ds(i){let t;return{c(){t=a("border-radius")},l(e){t=r(e,"border-radius")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function cs(i){let t;return{c(){t=a("/")},l(e){t=r(e,"/")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function us(i){let t;return{c(){t=a("ArrayBuffer")},l(e){t=r(e,"ArrayBuffer")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function hs(i){let t;return{c(){t=a("Blobs")},l(e){t=r(e,"Blobs")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function ms(i){let t;return{c(){t=a("Blob")},l(e){t=r(e,"Blob")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function ps(i){let t;return{c(){t=a("ArrayBuffer")},l(e){t=r(e,"ArrayBuffer")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function gs(i){let t;return{c(){t=a("await data.arrayBuffer()")},l(e){t=r(e,"await data.arrayBuffer()")},m(e,o){c(e,t,o)},d(e){e&&f(t)}}}function _s(i){let t,e="Today I learnt",o,w,H,u,Ke,fn=`<h3 class="svelte-1qle4d1">Drawing with linear gradients</h3> <p class="svelte-1qle4d1">In <a href="https://virtualcoffee.io/" rel="external">VirtualCoffee.io</a> Frontend Friday
				Folks, we have to create divs that resemble a given image on
				<a href="https://cssbattle.dev/" rel="external">CSSBattle.dev</a>. Lately, I&#39;ve tried to do
				the puzzles by styling them with
				<code>background: <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient" rel="external">linear-gradient()</a></code>. When you find out a way how to draw it like that, it always feels like a hack of the
				puzzle itself.</p>`,tt,be,Ce,$n="srcdoc sets an iframes doctype implicitly, Quirks mode expands the body height",nt,S,st,ke,dn="Frontend Friday Folks",lt,j,ot,J,at,Q,rt,O,it,ft,Xe,cn='<h3 class="svelte-1qle4d1">`::before` and `::after` are siblings, nested and `display: inline` in a div</h3> <p class="svelte-1qle4d1">I can never really remember how they work and during this Frontend Friday Folks puzzle, we\n				looked into that again. It seems to be easier to nest divs than using the pseudo elements\n				here. So to understand it better: <code>&lt;div&gt;&lt;::before&gt;content in ::before&lt;/::before&gt;content of\n					div&lt;::after&gt;content in ::after&lt;/::after&gt;&lt;/div&gt;</code></p>',$t,Ie,ye,un="Strings in JavaScript are iterable without using `split`",dt,B,ct,R,ut,G,ht,K,mt,X,pt,gt,xe,qe,hn="A `.github` repository for templates, code of conduct, etc.",_t,A,vt,Y,wt,Z,mn="Bekah's blog post",bt,Ct,Te,Se,pn="Check whether form is valid or not with CSS",kt,ee,It,te,yt,xt,Le,Ee,gn="`box-decoration-break` for inline padding over lines",qt,M,Tt,ne,_n="box-decoration-break",St,se,Lt,le,Et,zt,ze,Be,vn="pnpm install --prod=false",Bt,x,Ht,oe,Pt,ae,Mt,re,Wt,ie,Ft,fe,Nt,$e,At,Dt,He,Pe,wn="Svelte layout resets reset server side as well",Vt,W,Ut,de,jt,ce,Jt,ue,Qt,Ot,Me,We,bn='CSS border-radius "from" and "to" can be styled',Rt,D,Gt,he,Kt,me,Xt,Yt,Ye,Cn=`<h3 class="svelte-1qle4d1">Pasting an image into VSCode Markdown creates a file</h3> <p class="svelte-1qle4d1">I knew that pasting into GitHub uploads the image. Doing the same thing in VSCode when you
				are editing a Markdown file was new to me: It creates the image next to the saved Markdown
				file. An untitled / unsaved Markdown editor does NOT work - it has to be an actual file!</p>`,Zt,Fe,Ne,kn="WebRTC sends different things depending on browser",en,L,tn,pe,nn,ge,sn,_e,ln,ve,on,we,an,rn,Ze,In=`<h3 class="svelte-1qle4d1">Docker compose ports may send an empty response if local service is running</h3> <p class="svelte-1qle4d1">Took me a while today and I thought my docker setup is broken: If you have a local service
				serving the same port, the port will send an empty result. Ensure stopping all services
				potentially blocking the port - not just docker services.</p>`,et;return w=new Dn({props:{$$slots:{default:[Un]},$$scope:{ctx:i}}}),j=new b({props:{$$slots:{default:[jn]},$$scope:{ctx:i}}}),J=new b({props:{$$slots:{default:[Jn]},$$scope:{ctx:i}}}),Q=new b({props:{$$slots:{default:[Qn]},$$scope:{ctx:i}}}),O=new b({props:{$$slots:{default:[On]},$$scope:{ctx:i}}}),R=new b({props:{$$slots:{default:[Rn]},$$scope:{ctx:i}}}),G=new b({props:{$$slots:{default:[Gn]},$$scope:{ctx:i}}}),K=new b({props:{$$slots:{default:[Kn]},$$scope:{ctx:i}}}),X=new b({props:{$$slots:{default:[Xn]},$$scope:{ctx:i}}}),Y=new b({props:{$$slots:{default:[Yn]},$$scope:{ctx:i}}}),te=new b({props:{$$slots:{default:[Zn]},$$scope:{ctx:i}}}),se=new b({props:{$$slots:{default:[es]},$$scope:{ctx:i}}}),le=new b({props:{$$slots:{default:[ts]},$$scope:{ctx:i}}}),oe=new b({props:{$$slots:{default:[ns]},$$scope:{ctx:i}}}),ae=new b({props:{$$slots:{default:[ss]},$$scope:{ctx:i}}}),re=new b({props:{$$slots:{default:[ls]},$$scope:{ctx:i}}}),ie=new b({props:{$$slots:{default:[os]},$$scope:{ctx:i}}}),fe=new b({props:{$$slots:{default:[as]},$$scope:{ctx:i}}}),$e=new b({props:{$$slots:{default:[rs]},$$scope:{ctx:i}}}),de=new b({props:{$$slots:{default:[is]},$$scope:{ctx:i}}}),ce=new b({props:{$$slots:{default:[fs]},$$scope:{ctx:i}}}),ue=new b({props:{$$slots:{default:[$s]},$$scope:{ctx:i}}}),he=new b({props:{$$slots:{default:[ds]},$$scope:{ctx:i}}}),me=new b({props:{$$slots:{default:[cs]},$$scope:{ctx:i}}}),pe=new b({props:{$$slots:{default:[us]},$$scope:{ctx:i}}}),ge=new b({props:{$$slots:{default:[hs]},$$scope:{ctx:i}}}),_e=new b({props:{$$slots:{default:[ms]},$$scope:{ctx:i}}}),ve=new b({props:{$$slots:{default:[ps]},$$scope:{ctx:i}}}),we=new b({props:{$$slots:{default:[gs]},$$scope:{ctx:i}}}),{c(){t=$("h2"),t.textContent=e,o=k(),h(w.$$.fragment),H=k(),u=$("ul"),Ke=$("li"),Ke.innerHTML=fn,tt=k(),be=$("li"),Ce=$("h3"),Ce.textContent=$n,nt=k(),S=$("p"),st=a("When working on the Puzzle iframe for the "),ke=$("a"),ke.textContent=dn,lt=a(`, I had trouble centering the image. I had the same code result in the Chrome Dev Tools as
				in CSSBattle.dev, when inspecting the elements, so I didn't realize why it still looked
				different. It looks like when using the `),h(j.$$.fragment),ot=a(" on an "),h(J.$$.fragment),at=a(`
				element, the iframe sets the doctype implicitly. When writing into the iframe through
				`),h(Q.$$.fragment),rt=a(`, it doesn't set a doctype for the iframe and hence it stays
				in Quirks mode. Quirks mode seems to expand the body height, without having to set
				`),h(O.$$.fragment),it=a(" or something similar."),ft=k(),Xe=$("li"),Xe.innerHTML=cn,$t=k(),Ie=$("li"),ye=$("h3"),ye.textContent=un,dt=k(),B=$("p"),ct=a("When using "),h(R.$$.fragment),ut=a(`, it's not necessary to do a
				`),h(G.$$.fragment),ht=a(`
				before. If you want to `),h(K.$$.fragment),mt=a(" or "),h(X.$$.fragment),pt=a(` though, you
				need to split it first.`),gt=k(),xe=$("li"),qe=$("h3"),qe.textContent=hn,_t=k(),A=$("p"),vt=a(`I tried template repositories and forking them before, but it always felt a bit weird.
				Thanks to Bekah from VirtualCoffee.io, I learnt that you can have a `),h(Y.$$.fragment),wt=a(`
				repository instead of a folder in each of your projects to hold your templates. Credit goes to
				`),Z=$("a"),Z.textContent=mn,bt=a("!"),Ct=k(),Te=$("li"),Se=$("h3"),Se.textContent=pn,kt=k(),ee=$("p"),It=a("There is a selector called "),h(te.$$.fragment),yt=a(`! Thanks to Travis Barnette for pointing
				that out in VirtualCoffee and to Justin Noel for asking this question. Up to that point, I
				thought you can only check validity with JavaScript enabled...!`),xt=k(),Le=$("li"),Ee=$("h3"),Ee.textContent=gn,qt=k(),M=$("p"),Tt=a("The "),ne=$("a"),ne.textContent=_n,St=a(`
				property allows styling boxes on inline element breaks across multiple lines. By setting it to
				`),h(se.$$.fragment),Lt=a(", it will create multiple boxes, one for each line. It's necessary to add "),h(le.$$.fragment),Et=a(`
				as well to make it work on most browsers currently.`),zt=k(),ze=$("li"),Be=$("h3"),Be.textContent=vn,Bt=k(),x=$("p"),Ht=a("This not really documented feature allows me to override the "),h(oe.$$.fragment),Pt=a(`
				setting. If `),h(ae.$$.fragment),Mt=a(" is used, it will only install the "),h(re.$$.fragment),Wt=a(". "),h(ie.$$.fragment),Ft=a(" would only install the regular "),h(fe.$$.fragment),Nt=a(". To ensure both are installed, "),h($e.$$.fragment),At=a(" helps."),Dt=k(),He=$("li"),Pe=$("h3"),Pe.textContent=wn,Vt=k(),W=$("p"),Ut=a("If you use a "),h(de.$$.fragment),jt=a(` somewhere, it resets the
				`),h(ce.$$.fragment),Jt=a(` as well. Need to be aware of that, that this is done implicitly
				and doesn't need a separate `),h(ue.$$.fragment),Qt=a("."),Ot=k(),Me=$("li"),We=$("h3"),We.textContent=bn,Rt=k(),D=$("p"),Gt=a("Using "),h(he.$$.fragment),Kt=a(" with "),h(me.$$.fragment),Xt=a(` allows setting its horizontal and vertical
				values differently to each other. So a corner does not need to be symmetrical.`),Yt=k(),Ye=$("li"),Ye.innerHTML=Cn,Zt=k(),Fe=$("li"),Ne=$("h3"),Ne.textContent=kn,en=k(),L=$("p"),tn=a(`It's been a while that I've encountered bigger differences in browser implementations. I was
				surprised to learn that Chrome sends `),h(pe.$$.fragment),nn=a(" and Firefox sends "),h(ge.$$.fragment),sn=a(` through a WebRTC data channel when you send a file. It's crucial to allow both and it's possible
				to get from a `),h(_e.$$.fragment),ln=a(" to an "),h(ve.$$.fragment),on=a(" by using "),h(we.$$.fragment),an=a("."),rn=k(),Ze=$("li"),Ze.innerHTML=In,this.h()},l(n){t=d(n,"H2",{"data-svelte-h":!0}),T(t)!=="svelte-nr5bua"&&(t.textContent=e),o=I(n),m(w.$$.fragment,n),H=I(n),u=d(n,"UL",{class:!0});var l=y(u);Ke=d(l,"LI",{"data-svelte-h":!0}),T(Ke)!=="svelte-f634zk"&&(Ke.innerHTML=fn),tt=I(l),be=d(l,"LI",{});var Ae=y(be);Ce=d(Ae,"H3",{class:!0,"data-svelte-h":!0}),T(Ce)!=="svelte-fz1z1g"&&(Ce.textContent=$n),nt=I(Ae),S=d(Ae,"P",{class:!0});var E=y(S);st=r(E,"When working on the Puzzle iframe for the "),ke=d(E,"A",{href:!0,"data-svelte-h":!0}),T(ke)!=="svelte-3mw4j2"&&(ke.textContent=dn),lt=r(E,`, I had trouble centering the image. I had the same code result in the Chrome Dev Tools as
				in CSSBattle.dev, when inspecting the elements, so I didn't realize why it still looked
				different. It looks like when using the `),m(j.$$.fragment,E),ot=r(E," on an "),m(J.$$.fragment,E),at=r(E,`
				element, the iframe sets the doctype implicitly. When writing into the iframe through
				`),m(Q.$$.fragment,E),rt=r(E,`, it doesn't set a doctype for the iframe and hence it stays
				in Quirks mode. Quirks mode seems to expand the body height, without having to set
				`),m(O.$$.fragment,E),it=r(E," or something similar."),E.forEach(f),Ae.forEach(f),ft=I(l),Xe=d(l,"LI",{"data-svelte-h":!0}),T(Xe)!=="svelte-1gwh2cg"&&(Xe.innerHTML=cn),$t=I(l),Ie=d(l,"LI",{});var De=y(Ie);ye=d(De,"H3",{class:!0,"data-svelte-h":!0}),T(ye)!=="svelte-10rqcic"&&(ye.textContent=un),dt=I(De),B=d(De,"P",{class:!0});var P=y(B);ct=r(P,"When using "),m(R.$$.fragment,P),ut=r(P,`, it's not necessary to do a
				`),m(G.$$.fragment,P),ht=r(P,`
				before. If you want to `),m(K.$$.fragment,P),mt=r(P," or "),m(X.$$.fragment,P),pt=r(P,` though, you
				need to split it first.`),P.forEach(f),De.forEach(f),gt=I(l),xe=d(l,"LI",{});var Ve=y(xe);qe=d(Ve,"H3",{class:!0,"data-svelte-h":!0}),T(qe)!=="svelte-qo58x0"&&(qe.textContent=hn),_t=I(Ve),A=d(Ve,"P",{class:!0});var V=y(A);vt=r(V,`I tried template repositories and forking them before, but it always felt a bit weird.
				Thanks to Bekah from VirtualCoffee.io, I learnt that you can have a `),m(Y.$$.fragment,V),wt=r(V,`
				repository instead of a folder in each of your projects to hold your templates. Credit goes to
				`),Z=d(V,"A",{href:!0,rel:!0,"data-svelte-h":!0}),T(Z)!=="svelte-12iszy4"&&(Z.textContent=mn),bt=r(V,"!"),V.forEach(f),Ve.forEach(f),Ct=I(l),Te=d(l,"LI",{});var Ue=y(Te);Se=d(Ue,"H3",{class:!0,"data-svelte-h":!0}),T(Se)!=="svelte-12k1ox4"&&(Se.textContent=pn),kt=I(Ue),ee=d(Ue,"P",{class:!0});var je=y(ee);It=r(je,"There is a selector called "),m(te.$$.fragment,je),yt=r(je,`! Thanks to Travis Barnette for pointing
				that out in VirtualCoffee and to Justin Noel for asking this question. Up to that point, I
				thought you can only check validity with JavaScript enabled...!`),je.forEach(f),Ue.forEach(f),xt=I(l),Le=d(l,"LI",{});var Je=y(Le);Ee=d(Je,"H3",{class:!0,"data-svelte-h":!0}),T(Ee)!=="svelte-55q0m2"&&(Ee.textContent=gn),qt=I(Je),M=d(Je,"P",{class:!0});var F=y(M);Tt=r(F,"The "),ne=d(F,"A",{href:!0,rel:!0,"data-svelte-h":!0}),T(ne)!=="svelte-luosvv"&&(ne.textContent=_n),St=r(F,`
				property allows styling boxes on inline element breaks across multiple lines. By setting it to
				`),m(se.$$.fragment,F),Lt=r(F,", it will create multiple boxes, one for each line. It's necessary to add "),m(le.$$.fragment,F),Et=r(F,`
				as well to make it work on most browsers currently.`),F.forEach(f),Je.forEach(f),zt=I(l),ze=d(l,"LI",{});var Qe=y(ze);Be=d(Qe,"H3",{class:!0,"data-svelte-h":!0}),T(Be)!=="svelte-1p3f2ln"&&(Be.textContent=vn),Bt=I(Qe),x=d(Qe,"P",{class:!0});var q=y(x);Ht=r(q,"This not really documented feature allows me to override the "),m(oe.$$.fragment,q),Pt=r(q,`
				setting. If `),m(ae.$$.fragment,q),Mt=r(q," is used, it will only install the "),m(re.$$.fragment,q),Wt=r(q,". "),m(ie.$$.fragment,q),Ft=r(q," would only install the regular "),m(fe.$$.fragment,q),Nt=r(q,". To ensure both are installed, "),m($e.$$.fragment,q),At=r(q," helps."),q.forEach(f),Qe.forEach(f),Dt=I(l),He=d(l,"LI",{});var Oe=y(He);Pe=d(Oe,"H3",{class:!0,"data-svelte-h":!0}),T(Pe)!=="svelte-qn410"&&(Pe.textContent=wn),Vt=I(Oe),W=d(Oe,"P",{class:!0});var N=y(W);Ut=r(N,"If you use a "),m(de.$$.fragment,N),jt=r(N,` somewhere, it resets the
				`),m(ce.$$.fragment,N),Jt=r(N,` as well. Need to be aware of that, that this is done implicitly
				and doesn't need a separate `),m(ue.$$.fragment,N),Qt=r(N,"."),N.forEach(f),Oe.forEach(f),Ot=I(l),Me=d(l,"LI",{});var Re=y(Me);We=d(Re,"H3",{class:!0,"data-svelte-h":!0}),T(We)!=="svelte-thqz24"&&(We.textContent=bn),Rt=I(Re),D=d(Re,"P",{class:!0});var U=y(D);Gt=r(U,"Using "),m(he.$$.fragment,U),Kt=r(U," with "),m(me.$$.fragment,U),Xt=r(U,` allows setting its horizontal and vertical
				values differently to each other. So a corner does not need to be symmetrical.`),U.forEach(f),Re.forEach(f),Yt=I(l),Ye=d(l,"LI",{"data-svelte-h":!0}),T(Ye)!=="svelte-a6rqi7"&&(Ye.innerHTML=Cn),Zt=I(l),Fe=d(l,"LI",{});var Ge=y(Fe);Ne=d(Ge,"H3",{class:!0,"data-svelte-h":!0}),T(Ne)!=="svelte-xw1hr3"&&(Ne.textContent=kn),en=I(Ge),L=d(Ge,"P",{class:!0});var z=y(L);tn=r(z,`It's been a while that I've encountered bigger differences in browser implementations. I was
				surprised to learn that Chrome sends `),m(pe.$$.fragment,z),nn=r(z," and Firefox sends "),m(ge.$$.fragment,z),sn=r(z,` through a WebRTC data channel when you send a file. It's crucial to allow both and it's possible
				to get from a `),m(_e.$$.fragment,z),ln=r(z," to an "),m(ve.$$.fragment,z),on=r(z," by using "),m(we.$$.fragment,z),an=r(z,"."),z.forEach(f),Ge.forEach(f),rn=I(l),Ze=d(l,"LI",{"data-svelte-h":!0}),T(Ze)!=="svelte-4hkfi3"&&(Ze.innerHTML=In),l.forEach(f),this.h()},h(){C(Ce,"class","svelte-1qle4d1"),C(ke,"href",An+"/specials/frontend-friday-folks"),C(S,"class","svelte-1qle4d1"),C(ye,"class","svelte-1qle4d1"),C(B,"class","svelte-1qle4d1"),C(qe,"class","svelte-1qle4d1"),C(Z,"href","https://dev.to/opensauced/managing-community-health-files-and-templates-with-a-github-repository-l8f"),C(Z,"rel","external"),C(A,"class","svelte-1qle4d1"),C(Se,"class","svelte-1qle4d1"),C(ee,"class","svelte-1qle4d1"),C(Ee,"class","svelte-1qle4d1"),C(ne,"href","https://developer.mozilla.org/en-US/docs/Web/CSS/box-decoration-break"),C(ne,"rel","external"),C(M,"class","svelte-1qle4d1"),C(Be,"class","svelte-1qle4d1"),C(x,"class","svelte-1qle4d1"),C(Pe,"class","svelte-1qle4d1"),C(W,"class","svelte-1qle4d1"),C(We,"class","svelte-1qle4d1"),C(D,"class","svelte-1qle4d1"),C(Ne,"class","svelte-1qle4d1"),C(L,"class","svelte-1qle4d1"),C(u,"class","grid gap-4 m-0 p-0")},m(n,l){c(n,t,l),c(n,o,l),p(w,n,l),c(n,H,l),c(n,u,l),s(u,Ke),s(u,tt),s(u,be),s(be,Ce),s(be,nt),s(be,S),s(S,st),s(S,ke),s(S,lt),p(j,S,null),s(S,ot),p(J,S,null),s(S,at),p(Q,S,null),s(S,rt),p(O,S,null),s(S,it),s(u,ft),s(u,Xe),s(u,$t),s(u,Ie),s(Ie,ye),s(Ie,dt),s(Ie,B),s(B,ct),p(R,B,null),s(B,ut),p(G,B,null),s(B,ht),p(K,B,null),s(B,mt),p(X,B,null),s(B,pt),s(u,gt),s(u,xe),s(xe,qe),s(xe,_t),s(xe,A),s(A,vt),p(Y,A,null),s(A,wt),s(A,Z),s(A,bt),s(u,Ct),s(u,Te),s(Te,Se),s(Te,kt),s(Te,ee),s(ee,It),p(te,ee,null),s(ee,yt),s(u,xt),s(u,Le),s(Le,Ee),s(Le,qt),s(Le,M),s(M,Tt),s(M,ne),s(M,St),p(se,M,null),s(M,Lt),p(le,M,null),s(M,Et),s(u,zt),s(u,ze),s(ze,Be),s(ze,Bt),s(ze,x),s(x,Ht),p(oe,x,null),s(x,Pt),p(ae,x,null),s(x,Mt),p(re,x,null),s(x,Wt),p(ie,x,null),s(x,Ft),p(fe,x,null),s(x,Nt),p($e,x,null),s(x,At),s(u,Dt),s(u,He),s(He,Pe),s(He,Vt),s(He,W),s(W,Ut),p(de,W,null),s(W,jt),p(ce,W,null),s(W,Jt),p(ue,W,null),s(W,Qt),s(u,Ot),s(u,Me),s(Me,We),s(Me,Rt),s(Me,D),s(D,Gt),p(he,D,null),s(D,Kt),p(me,D,null),s(D,Xt),s(u,Yt),s(u,Ye),s(u,Zt),s(u,Fe),s(Fe,Ne),s(Fe,en),s(Fe,L),s(L,tn),p(pe,L,null),s(L,nn),p(ge,L,null),s(L,sn),p(_e,L,null),s(L,ln),p(ve,L,null),s(L,on),p(we,L,null),s(L,an),s(u,rn),s(u,Ze),et=!0},p(n,l){const Ae={};l&1&&(Ae.$$scope={dirty:l,ctx:n}),w.$set(Ae);const E={};l&1&&(E.$$scope={dirty:l,ctx:n}),j.$set(E);const De={};l&1&&(De.$$scope={dirty:l,ctx:n}),J.$set(De);const P={};l&1&&(P.$$scope={dirty:l,ctx:n}),Q.$set(P);const Ve={};l&1&&(Ve.$$scope={dirty:l,ctx:n}),O.$set(Ve);const V={};l&1&&(V.$$scope={dirty:l,ctx:n}),R.$set(V);const Ue={};l&1&&(Ue.$$scope={dirty:l,ctx:n}),G.$set(Ue);const je={};l&1&&(je.$$scope={dirty:l,ctx:n}),K.$set(je);const Je={};l&1&&(Je.$$scope={dirty:l,ctx:n}),X.$set(Je);const F={};l&1&&(F.$$scope={dirty:l,ctx:n}),Y.$set(F);const Qe={};l&1&&(Qe.$$scope={dirty:l,ctx:n}),te.$set(Qe);const q={};l&1&&(q.$$scope={dirty:l,ctx:n}),se.$set(q);const Oe={};l&1&&(Oe.$$scope={dirty:l,ctx:n}),le.$set(Oe);const N={};l&1&&(N.$$scope={dirty:l,ctx:n}),oe.$set(N);const Re={};l&1&&(Re.$$scope={dirty:l,ctx:n}),ae.$set(Re);const U={};l&1&&(U.$$scope={dirty:l,ctx:n}),re.$set(U);const Ge={};l&1&&(Ge.$$scope={dirty:l,ctx:n}),ie.$set(Ge);const z={};l&1&&(z.$$scope={dirty:l,ctx:n}),fe.$set(z);const yn={};l&1&&(yn.$$scope={dirty:l,ctx:n}),$e.$set(yn);const xn={};l&1&&(xn.$$scope={dirty:l,ctx:n}),de.$set(xn);const qn={};l&1&&(qn.$$scope={dirty:l,ctx:n}),ce.$set(qn);const Tn={};l&1&&(Tn.$$scope={dirty:l,ctx:n}),ue.$set(Tn);const Sn={};l&1&&(Sn.$$scope={dirty:l,ctx:n}),he.$set(Sn);const Ln={};l&1&&(Ln.$$scope={dirty:l,ctx:n}),me.$set(Ln);const En={};l&1&&(En.$$scope={dirty:l,ctx:n}),pe.$set(En);const zn={};l&1&&(zn.$$scope={dirty:l,ctx:n}),ge.$set(zn);const Bn={};l&1&&(Bn.$$scope={dirty:l,ctx:n}),_e.$set(Bn);const Hn={};l&1&&(Hn.$$scope={dirty:l,ctx:n}),ve.$set(Hn);const Pn={};l&1&&(Pn.$$scope={dirty:l,ctx:n}),we.$set(Pn)},i(n){et||(g(w.$$.fragment,n),g(j.$$.fragment,n),g(J.$$.fragment,n),g(Q.$$.fragment,n),g(O.$$.fragment,n),g(R.$$.fragment,n),g(G.$$.fragment,n),g(K.$$.fragment,n),g(X.$$.fragment,n),g(Y.$$.fragment,n),g(te.$$.fragment,n),g(se.$$.fragment,n),g(le.$$.fragment,n),g(oe.$$.fragment,n),g(ae.$$.fragment,n),g(re.$$.fragment,n),g(ie.$$.fragment,n),g(fe.$$.fragment,n),g($e.$$.fragment,n),g(de.$$.fragment,n),g(ce.$$.fragment,n),g(ue.$$.fragment,n),g(he.$$.fragment,n),g(me.$$.fragment,n),g(pe.$$.fragment,n),g(ge.$$.fragment,n),g(_e.$$.fragment,n),g(ve.$$.fragment,n),g(we.$$.fragment,n),et=!0)},o(n){_(w.$$.fragment,n),_(j.$$.fragment,n),_(J.$$.fragment,n),_(Q.$$.fragment,n),_(O.$$.fragment,n),_(R.$$.fragment,n),_(G.$$.fragment,n),_(K.$$.fragment,n),_(X.$$.fragment,n),_(Y.$$.fragment,n),_(te.$$.fragment,n),_(se.$$.fragment,n),_(le.$$.fragment,n),_(oe.$$.fragment,n),_(ae.$$.fragment,n),_(re.$$.fragment,n),_(ie.$$.fragment,n),_(fe.$$.fragment,n),_($e.$$.fragment,n),_(de.$$.fragment,n),_(ce.$$.fragment,n),_(ue.$$.fragment,n),_(he.$$.fragment,n),_(me.$$.fragment,n),_(pe.$$.fragment,n),_(ge.$$.fragment,n),_(_e.$$.fragment,n),_(ve.$$.fragment,n),_(we.$$.fragment,n),et=!1},d(n){n&&(f(t),f(o),f(H),f(u)),v(w,n),v(j),v(J),v(Q),v(O),v(R),v(G),v(K),v(X),v(Y),v(te),v(se),v(le),v(oe),v(ae),v(re),v(ie),v(fe),v($e),v(de),v(ce),v(ue),v(he),v(me),v(pe),v(ge),v(_e),v(ve),v(we)}}}function vs(i){let t,e;return t=new Vn({props:{$$slots:{default:[_s]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment)},l(o){m(t.$$.fragment,o)},m(o,w){p(t,o,w),e=!0},p(o,[w]){const H={};w&1&&(H.$$scope={dirty:w,ctx:o}),t.$set(H)},i(o){e||(g(t.$$.fragment,o),e=!0)},o(o){_(t.$$.fragment,o),e=!1},d(o){v(t,o)}}}class xs extends Fn{constructor(t){super(),Nn(this,t,null,vs,Wn,{})}}export{xs as component};
