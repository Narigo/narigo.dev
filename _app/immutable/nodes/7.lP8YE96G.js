import{s as jt,f as a,a as l,l as at,g as s,A as h,c as r,h as qt,m as st,d as n,B as Nt,j as Ht,i,x as Tt}from"../chunks/scheduler.Po0zCuFf.js";import{S as Wt,i as Et,b as Pt,d as Lt,m as Mt,a as Rt,t as At,e as St}from"../chunks/index.WEWm72Kh.js";import{C as Ot}from"../chunks/Code.GrnAcMCy.js";import{A as Ut}from"../chunks/ArticleLayout._Lc0JTvr.js";const zt=""+new URL("../assets/keepass-diff-screencast.fQ-Rdl17.gif",import.meta.url).href;function Dt(S){let o;return{c(){o=at("cargo install")},l(u){o=st(u,"cargo install")},m(u,d){i(u,o,d)},d(u){u&&n(o)}}}function Gt(S){let o,u='TL;DR: I&#39;ve created a tool called <a href="https://keepass-diff.narigo.dev/" rel="external">keepass-diff, to diff two Keepass databases (.kdbx) files</a>.',d,f,j="Motivation",q,m,lt=`The first real password manager I&#39;ve used was <a href="https://keepass.info/" rel="external noopener noreferrer">KeePass</a>. Sharing databases with others happened through
		<a href="https://owncloud.com/" rel="external noopener noreferrer">OwnCloud</a>
		/ <a href="https://nextcloud.com/" rel="external noopener noreferrer">NextCloud</a> instances and
		.kdbx files. When I started using it for my own passwords, I could sync my database with multiple
		devices in a similar fashion using NextCloud.`,N,v,rt=`At some point in time, you may forget closing the database on one machine and still use it to
		edit something on another. If that happens, NextCloud creates two files, showing that there is a
		conflict as it can't merge these encrypted files automatically. Since I don't really have to
		look in the directory all the time, it happened that I had conflicting files and didn't realize
		it until I forgot which passwords I've changed. With bigger databases, checking each individual
		password becomes a tedious and time consuming process.`,W,w,ht=`As I&#39;m a software engineer, I wanted to write something that helps me with this task. And I
		wanted to check out the <a href="https://www.rust-lang.org/" rel="external noopener noreferrer">Rust programming language</a> for a while. What a great excuse to learn something new!`,E,x,dt="How does it work?",O,C,ut=`Leveraging the <a href="https://github.com/sseemayer/keepass-rs/" rel="external noopener noreferrer">underlying keepass-rs library</a>, it reads two files and asks for their passwords. It checks for differences and shows them as
		output. Here is a short screencast I&#39;ve recorded a while ago and put on the
		<a href="https://keepass-diff.narigo.dev/" rel="external noopener noreferrer">keepass-diff documentation page</a>:`,U,b,ft,z,g,pt="Roadmap",D,y,ct="There are a couple of open points I want to work on.",G,_,mt="Automated releases",K,p,it,c,ot,B,k,vt=`My opinion on this changed, after receiving feedback from users who desperately needed a tool
		like this but weren't able to use it. Having to install Rust first, getting everything to run on
		their device is not really straight forward if you have never done this. I understand that
		people may not have time for this. And before having those rely on someone else to build a
		version for them and let them download a binary from some other, unofficial site which may
		contain something else... it's probably better to provide an official release for the various
		platforms.`,Q,I,wt="Creating releases could be handled automatically through GitHub actions.",F,$,xt="Improve testing",J,H,Ct=`Currently, there are a few end-to-end tests by checking the output of commands. The only real
		unit tests are written for a custom Stack implementation. That implementation can probably be
		switched out by using some built-in Rust data structure that I didn't know about.`,V,T,bt=`I think there could be unit tests for the diff algorithm containing all relevant information
		that shows up in the representation in the end, like intendation and whether it's left or right
		side.`,X,P,gt=`The current end-to-end tests are pretty slow as well. Using snapshot testing is always a bit
		tricky and while the current setup works, I'm pretty sure this workflow could be improved. I
		suspect there are test runners for Rust that may help here.`,Y,L,yt="Overall code quality",Z,M,_t=`When I started this project, there were no contributors and I didn't know anyone using Rust who
		I could ask for reviews. I even put an invite in the README.md file to give me feedback on the
		code. Since the inception of the project, there have been a few contributions that helped
		improve the code and made me aware of how things could be done differently. They mainly allowed
		everyone to better understand the intention of something and didn't hide it in weird conversions
		because I didn't know how to implement something and tested various ways until I found one that
		worked.`,tt,R,kt="Check it out",et,A,It='The source code is available on <a href="https://github.com/Narigo/keepass-diff" rel="external">github.com/Narigo/keepass-diff/</a>.',nt;return c=new Ot({props:{$$slots:{default:[Dt]},$$scope:{ctx:S}}}),{c(){o=a("p"),o.innerHTML=u,d=l(),f=a("h2"),f.textContent=j,q=l(),m=a("p"),m.innerHTML=lt,N=l(),v=a("p"),v.textContent=rt,W=l(),w=a("p"),w.innerHTML=ht,E=l(),x=a("h2"),x.textContent=dt,O=l(),C=a("p"),C.innerHTML=ut,U=l(),b=a("img"),z=l(),g=a("h2"),g.textContent=pt,D=l(),y=a("p"),y.textContent=ct,G=l(),_=a("h3"),_.textContent=mt,K=l(),p=a("p"),it=at(`In the beginning, I thought it's good to let people read the code and have to install the tool
		manually through `),Pt(c.$$.fragment),ot=at(`. I didn't want people to use this on their secrets
		without knowing what it does. So to be able to use this, you did have to check out the code
		first.`),B=l(),k=a("p"),k.textContent=vt,Q=l(),I=a("p"),I.textContent=wt,F=l(),$=a("h3"),$.textContent=xt,J=l(),H=a("p"),H.textContent=Ct,V=l(),T=a("p"),T.textContent=bt,X=l(),P=a("p"),P.textContent=gt,Y=l(),L=a("h3"),L.textContent=yt,Z=l(),M=a("p"),M.textContent=_t,tt=l(),R=a("h2"),R.textContent=kt,et=l(),A=a("p"),A.innerHTML=It,this.h()},l(t){o=s(t,"P",{"data-svelte-h":!0}),h(o)!=="svelte-1w8tmao"&&(o.innerHTML=u),d=r(t),f=s(t,"H2",{"data-svelte-h":!0}),h(f)!=="svelte-19l56be"&&(f.textContent=j),q=r(t),m=s(t,"P",{"data-svelte-h":!0}),h(m)!=="svelte-a1t62o"&&(m.innerHTML=lt),N=r(t),v=s(t,"P",{"data-svelte-h":!0}),h(v)!=="svelte-1ra065y"&&(v.textContent=rt),W=r(t),w=s(t,"P",{"data-svelte-h":!0}),h(w)!=="svelte-bfcrfa"&&(w.innerHTML=ht),E=r(t),x=s(t,"H2",{"data-svelte-h":!0}),h(x)!=="svelte-54bp3g"&&(x.textContent=dt),O=r(t),C=s(t,"P",{"data-svelte-h":!0}),h(C)!=="svelte-3dbx31"&&(C.innerHTML=ut),U=r(t),b=s(t,"IMG",{src:!0,alt:!0}),z=r(t),g=s(t,"H2",{"data-svelte-h":!0}),h(g)!=="svelte-146cx5i"&&(g.textContent=pt),D=r(t),y=s(t,"P",{"data-svelte-h":!0}),h(y)!=="svelte-1g8l251"&&(y.textContent=ct),G=r(t),_=s(t,"H3",{"data-svelte-h":!0}),h(_)!=="svelte-172qtlw"&&(_.textContent=mt),K=r(t),p=s(t,"P",{});var e=qt(p);it=st(e,`In the beginning, I thought it's good to let people read the code and have to install the tool
		manually through `),Lt(c.$$.fragment,e),ot=st(e,`. I didn't want people to use this on their secrets
		without knowing what it does. So to be able to use this, you did have to check out the code
		first.`),e.forEach(n),B=r(t),k=s(t,"P",{"data-svelte-h":!0}),h(k)!=="svelte-493z16"&&(k.textContent=vt),Q=r(t),I=s(t,"P",{"data-svelte-h":!0}),h(I)!=="svelte-1ytwjd1"&&(I.textContent=wt),F=r(t),$=s(t,"H3",{"data-svelte-h":!0}),h($)!=="svelte-i4woj6"&&($.textContent=xt),J=r(t),H=s(t,"P",{"data-svelte-h":!0}),h(H)!=="svelte-8imdd8"&&(H.textContent=Ct),V=r(t),T=s(t,"P",{"data-svelte-h":!0}),h(T)!=="svelte-oi592b"&&(T.textContent=bt),X=r(t),P=s(t,"P",{"data-svelte-h":!0}),h(P)!=="svelte-q3x6"&&(P.textContent=gt),Y=r(t),L=s(t,"H3",{"data-svelte-h":!0}),h(L)!=="svelte-ysxqvf"&&(L.textContent=yt),Z=r(t),M=s(t,"P",{"data-svelte-h":!0}),h(M)!=="svelte-144bo1l"&&(M.textContent=_t),tt=r(t),R=s(t,"H2",{"data-svelte-h":!0}),h(R)!=="svelte-16lrlpj"&&(R.textContent=kt),et=r(t),A=s(t,"P",{"data-svelte-h":!0}),h(A)!=="svelte-ubwkyv"&&(A.innerHTML=It),this.h()},h(){Nt(b.src,ft=zt)||Ht(b,"src",ft),Ht(b,"alt","Screencast of how keepass-diff is being used")},m(t,e){i(t,o,e),i(t,d,e),i(t,f,e),i(t,q,e),i(t,m,e),i(t,N,e),i(t,v,e),i(t,W,e),i(t,w,e),i(t,E,e),i(t,x,e),i(t,O,e),i(t,C,e),i(t,U,e),i(t,b,e),i(t,z,e),i(t,g,e),i(t,D,e),i(t,y,e),i(t,G,e),i(t,_,e),i(t,K,e),i(t,p,e),Tt(p,it),Mt(c,p,null),Tt(p,ot),i(t,B,e),i(t,k,e),i(t,Q,e),i(t,I,e),i(t,F,e),i(t,$,e),i(t,J,e),i(t,H,e),i(t,V,e),i(t,T,e),i(t,X,e),i(t,P,e),i(t,Y,e),i(t,L,e),i(t,Z,e),i(t,M,e),i(t,tt,e),i(t,R,e),i(t,et,e),i(t,A,e),nt=!0},p(t,e){const $t={};e&1&&($t.$$scope={dirty:e,ctx:t}),c.$set($t)},i(t){nt||(Rt(c.$$.fragment,t),nt=!0)},o(t){At(c.$$.fragment,t),nt=!1},d(t){t&&(n(o),n(d),n(f),n(q),n(m),n(N),n(v),n(W),n(w),n(E),n(x),n(O),n(C),n(U),n(b),n(z),n(g),n(D),n(y),n(G),n(_),n(K),n(p),n(B),n(k),n(Q),n(I),n(F),n($),n(J),n(H),n(V),n(T),n(X),n(P),n(Y),n(L),n(Z),n(M),n(tt),n(R),n(et),n(A)),St(c)}}}function Kt(S){let o,u;return o=new Ut({props:{title:"keepass-diff",lastUpdateOn:"2024-01-25",$$slots:{default:[Gt]},$$scope:{ctx:S}}}),{c(){Pt(o.$$.fragment)},l(d){Lt(o.$$.fragment,d)},m(d,f){Mt(o,d,f),u=!0},p(d,[f]){const j={};f&1&&(j.$$scope={dirty:f,ctx:d}),o.$set(j)},i(d){u||(Rt(o.$$.fragment,d),u=!0)},o(d){At(o.$$.fragment,d),u=!1},d(d){St(o,d)}}}class Vt extends Wt{constructor(o){super(),Et(this,o,null,Kt,jt,{})}}export{Vt as component};
