import{s as K,f as B,a as k,g as N,h as U,A as j,c as C,d as _,i as w,x as b,l as T,m as x}from"../chunks/scheduler.52b7490a.js";import{S as H,i as I,b as c,d as m,m as g,a as p,t as d,e as h}from"../chunks/index.644eb738.js";import{C as L}from"../chunks/Code.6c1386b1.js";import{C as E}from"../chunks/CodeBlock.47eab079.js";import{N as F}from"../chunks/Narigo.e24b860c.js";import{K as O}from"../chunks/KataLayout.362bf651.js";function P(i){let t;return{c(){t=T("filter().length > 1")},l(e){t=x(e,"filter().length > 1")},m(e,r){w(e,t,r)},d(e){e&&_(t)}}}function z(i){let t,e,r,s;return e=new L({props:{$$slots:{default:[P]},$$scope:{ctx:i}}}),{c(){t=T("The easy "),c(e.$$.fragment),r=T(" solution is not performant enough for the tests to work. Two sets worked better.")},l(n){t=x(n,"The easy "),m(e.$$.fragment,n),r=x(n," solution is not performant enough for the tests to work. Two sets worked better.")},m(n,u){w(n,t,u),g(e,n,u),w(n,r,u),s=!0},p(n,u){const f={};u&4&&(f.$$scope={dirty:u,ctx:n}),e.$set(f)},i(n){s||(p(e.$$.fragment,n),s=!0)},o(n){d(e.$$.fragment,n),s=!1},d(n){n&&(_(t),_(r)),h(e,n)}}}function D(i){let t;return{c(){t=T("This is walking through the array to find the first that's not unique.")},l(e){t=x(e,"This is walking through the array to find the first that's not unique.")},m(e,r){w(e,t,r)},d(e){e&&_(t)}}}function G(i){let t,e,r="Find the unique number",s,n,u,f,A,l,S,$,q;return n=new E({props:{code:i[0]}}),f=new F({props:{$$slots:{default:[z]},$$scope:{ctx:i}}}),l=new E({props:{code:i[1]}}),$=new F({props:{$$slots:{default:[D]},$$scope:{ctx:i}}}),{c(){t=B("section"),e=B("h3"),e.textContent=r,s=k(),c(n.$$.fragment),u=k(),c(f.$$.fragment),A=k(),c(l.$$.fragment),S=k(),c($.$$.fragment)},l(a){t=N(a,"SECTION",{});var o=U(t);e=N(o,"H3",{"data-svelte-h":!0}),j(e)!=="svelte-ji7hoc"&&(e.textContent=r),s=C(o),m(n.$$.fragment,o),u=C(o),m(f.$$.fragment,o),A=C(o),m(l.$$.fragment,o),S=C(o),m($.$$.fragment,o),o.forEach(_)},m(a,o){w(a,t,o),b(t,e),b(t,s),g(n,t,null),b(t,u),g(f,t,null),b(t,A),g(l,t,null),b(t,S),g($,t,null),q=!0},p(a,o){const v={};o&4&&(v.$$scope={dirty:o,ctx:a}),f.$set(v);const y={};o&4&&(y.$$scope={dirty:o,ctx:a}),$.$set(y)},i(a){q||(p(n.$$.fragment,a),p(f.$$.fragment,a),p(l.$$.fragment,a),p($.$$.fragment,a),q=!0)},o(a){d(n.$$.fragment,a),d(f.$$.fragment,a),d(l.$$.fragment,a),d($.$$.fragment,a),q=!1},d(a){a&&_(t),h(n),h(f),h(l),h($)}}}function J(i){let t,e;return t=new O({props:{id:"585d7d5adb20cf33cb000235",name:"Find the unique number",$$slots:{default:[G]},$$scope:{ctx:i}}}),{c(){c(t.$$.fragment)},l(r){m(t.$$.fragment,r)},m(r,s){g(t,r,s),e=!0},p(r,[s]){const n={};s&4&&(n.$$scope={dirty:s,ctx:r}),t.$set(n)},i(r){e||(p(t.$$.fragment,r),e=!0)},o(r){d(t.$$.fragment,r),e=!1},d(r){h(t,r)}}}function M(i){return[`function findUniq(arr) {
    const [a, b, c] = arr;
    const [uniqA, uniqB] = new Set(arr);
    if (uniqA === a && (uniqA === b || uniqA === c)) return uniqB;
    return uniqA;
  }`,`function findUniq(arr) {
  const [a, b, c] = arr;
  if (a !== b && b === c) return a;
  if (a !== c && a === c) return b;
  
  for (let i = arr.length - 1; i > 0; --i) {
    if (arr[i] !== a) return arr[i];
  }
}`]}class Z extends H{constructor(t){super(),I(this,t,M,J,K,{})}}export{Z as component};
