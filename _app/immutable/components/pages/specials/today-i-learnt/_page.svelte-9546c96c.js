import{S as Nt,i as Ut,s as Vt,w as Tt,x as At,y as Bt,f as Ht,t as qt,z as Mt,k as i,q as e,a as z,l,m as s,r as o,h as n,c as F,n as C,b as q,G as t}from"../../../../chunks/index-543a8e9c.js";import{b as Gt}from"../../../../chunks/paths-b4419565.js";import{N as jt}from"../../../../chunks/Narigo-aec83592.js";import{P as Jt}from"../../../../chunks/PageLayout-506349f6.js";function Kt(W){let r;return{c(){r=e(`To remember more of the little things I learn, I want to write them down. I'll update this page
		whenever I find something worth to log. Most of this will be around web development, but I don't
		want to limit myself to that. Let's see where this leads to.`)},l(f){r=o(f,`To remember more of the little things I learn, I want to write them down. I'll update this page
		whenever I find something worth to log. Most of this will be around web development, but I don't
		want to limit myself to that. Let's see where this leads to.`)},m(f,d){q(f,r,d)},d(f){f&&n(r)}}}function Rt(W){let r,f,d,c,y,g,b,P,G,j,u,J,_,K,R,k,X,Y,S,Z,I,tt,et,ot,$,O,nt,at,h,rt,x,it,lt,Q,st,dt,T,ht,ft,A,ct,mt,D,ut,Et="{ height: 100% }",pt,gt,wt,E,B,vt,yt,L,bt,H,_t,M;return c=new jt({props:{$$slots:{default:[Kt]},$$scope:{ctx:W}}}),{c(){r=i("h2"),f=e("Today I learnt"),d=z(),Tt(c.$$.fragment),y=z(),g=i("ul"),b=i("li"),P=i("h3"),G=e("Drawing with linear gradients"),j=z(),u=i("p"),J=e("In "),_=i("a"),K=e("VirtualCoffee.io"),R=e(` Frontend Friday
				Folks, we have to create divs that resemble a given image on
				`),k=i("a"),X=e("CSSBattle.dev"),Y=e(`. Lately, I've tried to do
				the puzzles by styling them with
				`),S=i("code"),Z=e("background: "),I=i("a"),tt=e("linear-gradient()"),et=e(`. When you find out a way how to draw it like that, it always feels like a hack of the
				puzzle itself.`),ot=z(),$=i("li"),O=i("h3"),nt=e("srcdoc sets an iframes doctype implicitly, Quirks mode expands the body height"),at=z(),h=i("p"),rt=e("When working on the Puzzle iframe for the "),x=i("a"),it=e("Frontend Friday Folks"),lt=e(`, I had trouble centering the image. I had the same code result in the Chrome Dev Tools as
				in CSSBattle.dev, when inspecting the elements, so I didn't realize why it still looked
				different. It looks like when using the `),Q=i("code"),st=e("srcdoc"),dt=e(" on an "),T=i("code"),ht=e("iframe"),ft=e(`
				element, the iframe sets the doctype implicitly. When writing into the iframe through
				`),A=i("code"),ct=e("contentWindow.write"),mt=e(`, it doesn't set a doctype for the iframe and hence it stays
				in Quirks mode. Quirks mode seems to expand the body height, without having to set
				`),D=i("code"),ut=e("html,body "),pt=e(Et),gt=e(" or something similar."),wt=z(),E=i("li"),B=i("h3"),vt=e("`::before` and `::after` are siblings, nested and `display: inline` in a div"),yt=z(),L=i("p"),bt=e(`I can never really remember how they work and during this Frontend Friday Folks puzzle, we
				looked into that again. It seems to be easier to nest divs than using the pseudo elements
				here. So to understand it better: `),H=i("code"),_t=e(`<div><::before>content in ::before</::before>content of
					div<::after>content in ::after</::after></div>`),this.h()},l(a){r=l(a,"H2",{});var p=s(r);f=o(p,"Today I learnt"),p.forEach(n),d=F(a),At(c.$$.fragment,a),y=F(a),g=l(a,"UL",{});var w=s(g);b=l(w,"LI",{});var N=s(b);P=l(N,"H3",{});var zt=s(P);G=o(zt,"Drawing with linear gradients"),zt.forEach(n),j=F(N),u=l(N,"P",{});var v=s(u);J=o(v,"In "),_=l(v,"A",{href:!0,rel:!0});var Ft=s(_);K=o(Ft,"VirtualCoffee.io"),Ft.forEach(n),R=o(v,` Frontend Friday
				Folks, we have to create divs that resemble a given image on
				`),k=l(v,"A",{href:!0,rel:!0});var Ct=s(k);X=o(Ct,"CSSBattle.dev"),Ct.forEach(n),Y=o(v,`. Lately, I've tried to do
				the puzzles by styling them with
				`),S=l(v,"CODE",{});var kt=s(S);Z=o(kt,"background: "),I=l(kt,"A",{href:!0,rel:!0});var St=s(I);tt=o(St,"linear-gradient()"),St.forEach(n),kt.forEach(n),et=o(v,`. When you find out a way how to draw it like that, it always feels like a hack of the
				puzzle itself.`),v.forEach(n),N.forEach(n),ot=F(w),$=l(w,"LI",{});var U=s($);O=l(U,"H3",{});var xt=s(O);nt=o(xt,"srcdoc sets an iframes doctype implicitly, Quirks mode expands the body height"),xt.forEach(n),at=F(U),h=l(U,"P",{});var m=s(h);rt=o(m,"When working on the Puzzle iframe for the "),x=l(m,"A",{href:!0});var Dt=s(x);it=o(Dt,"Frontend Friday Folks"),Dt.forEach(n),lt=o(m,`, I had trouble centering the image. I had the same code result in the Chrome Dev Tools as
				in CSSBattle.dev, when inspecting the elements, so I didn't realize why it still looked
				different. It looks like when using the `),Q=l(m,"CODE",{});var Lt=s(Q);st=o(Lt,"srcdoc"),Lt.forEach(n),dt=o(m," on an "),T=l(m,"CODE",{});var Wt=s(T);ht=o(Wt,"iframe"),Wt.forEach(n),ft=o(m,`
				element, the iframe sets the doctype implicitly. When writing into the iframe through
				`),A=l(m,"CODE",{});var Pt=s(A);ct=o(Pt,"contentWindow.write"),Pt.forEach(n),mt=o(m,`, it doesn't set a doctype for the iframe and hence it stays
				in Quirks mode. Quirks mode seems to expand the body height, without having to set
				`),D=l(m,"CODE",{});var It=s(D);ut=o(It,"html,body "),pt=o(It,Et),It.forEach(n),gt=o(m," or something similar."),m.forEach(n),U.forEach(n),wt=F(w),E=l(w,"LI",{});var V=s(E);B=l(V,"H3",{});var Ot=s(B);vt=o(Ot,"`::before` and `::after` are siblings, nested and `display: inline` in a div"),Ot.forEach(n),yt=F(V),L=l(V,"P",{});var $t=s(L);bt=o($t,`I can never really remember how they work and during this Frontend Friday Folks puzzle, we
				looked into that again. It seems to be easier to nest divs than using the pseudo elements
				here. So to understand it better: `),H=l($t,"CODE",{});var Qt=s(H);_t=o(Qt,`<div><::before>content in ::before</::before>content of
					div<::after>content in ::after</::after></div>`),Qt.forEach(n),$t.forEach(n),V.forEach(n),w.forEach(n),this.h()},h(){C(_,"href","https://virtualcoffee.io/"),C(_,"rel","external"),C(k,"href","https://cssbattle.dev/"),C(k,"rel","external"),C(I,"href","https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient"),C(I,"rel","external"),C(x,"href",Gt+"/specials/frontend-friday-folks")},m(a,p){q(a,r,p),t(r,f),q(a,d,p),Bt(c,a,p),q(a,y,p),q(a,g,p),t(g,b),t(b,P),t(P,G),t(b,j),t(b,u),t(u,J),t(u,_),t(_,K),t(u,R),t(u,k),t(k,X),t(u,Y),t(u,S),t(S,Z),t(S,I),t(I,tt),t(u,et),t(g,ot),t(g,$),t($,O),t(O,nt),t($,at),t($,h),t(h,rt),t(h,x),t(x,it),t(h,lt),t(h,Q),t(Q,st),t(h,dt),t(h,T),t(T,ht),t(h,ft),t(h,A),t(A,ct),t(h,mt),t(h,D),t(D,ut),t(D,pt),t(h,gt),t(g,wt),t(g,E),t(E,B),t(B,vt),t(E,yt),t(E,L),t(L,bt),t(L,H),t(H,_t),M=!0},p(a,p){const w={};p&1&&(w.$$scope={dirty:p,ctx:a}),c.$set(w)},i(a){M||(Ht(c.$$.fragment,a),M=!0)},o(a){qt(c.$$.fragment,a),M=!1},d(a){a&&n(r),a&&n(d),Mt(c,a),a&&n(y),a&&n(g)}}}function Xt(W){let r,f;return r=new Jt({props:{$$slots:{default:[Rt]},$$scope:{ctx:W}}}),{c(){Tt(r.$$.fragment)},l(d){At(r.$$.fragment,d)},m(d,c){Bt(r,d,c),f=!0},p(d,[c]){const y={};c&1&&(y.$$scope={dirty:c,ctx:d}),r.$set(y)},i(d){f||(Ht(r.$$.fragment,d),f=!0)},o(d){qt(r.$$.fragment,d),f=!1},d(d){Mt(r,d)}}}class oe extends Nt{constructor(r){super(),Ut(this,r,null,Xt,Vt,{})}}export{oe as default};
