@import 'tailwindcss';

@plugin '@tailwindcss/typography';
@plugin '@tailwindcss/container-queries';

@theme inline {
	--animate-announce: announce 2000ms infinite ease;
	--animate-pulse-fast: pulse 800ms cubic-bezier(0.4, 0, 0.6, 1) infinite;
	--animate-shake: shake 100ms infinite alternate;

	--color-body: rgb(0 0 0);

	--color-primary-text: var(--color-white);
	--color-primary-light: var(--color-comic-primary-light);
	--color-primary: var(--color-comic-primary);
	--color-primary-dark: var(--color-comic-primary-dark);

	--font-primary: var(--font-comic);
	--font-headline: var(--font-comic-headline);
	--font-code: 'Victor Mono', monospace;

	--shadow-box: 0.25rem 0.25rem 0 #555;

	@keyframes announce {
		0%,
		50%,
		100% {
			rotate: 0deg;
			scale: 1;
		}
		25% {
			rotate: -2deg;
			scale: 1.05;
		}
		75% {
			rotate: 2deg;
			scale: 1.05;
		}
	}
	@keyframes shake {
		0%,
		100% {
			transform: translate(-2px, -1px);
		}
		20%,
		80% {
			transform: translate(1px, 2px);
		}
		40% {
			transform: translate(2px, 1px);
		}
		60% {
			transform: translate(-1px, -1px);
		}
	}
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentcolor);
	}
}

@layer base {
	:root {
		--font-primary: var(--font-comic-primary);
		--font-headline: var(--font-comic-headline);

		--nd-box-shadow: 0.25rem 0.25rem 0 #555;

		--text-color: var(--color-black);
		--primary-text-color: var(--color-white);
	}

	.comic h1,
	.comic h2,
	.comic h3,
	.comic h4,
	.comic h5,
	.comic h6 {
		@apply font-headline shadow-box;
		background: var(--color-primary);
		clear: both;
		color: var(--color-primary-text);
		display: flex;
		flex-wrap: wrap;
		isolation: isolate;
		padding: 0.5em 1em;
		margin: 0 0.5em 0.5em 0;
		max-width: max-content;
	}
	.comic a {
		@apply text-blue-900 underline decoration-dashed;
	}
	.comic a:hover {
		@apply text-blue-700 no-underline;
	}
	.comic a[rel~='external']:not([class~='internal'])::after {
		position: relative;
		content: '';
		display: inline-flex;
		background: url('data:image/svg+xml,<svg viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg"><text x="0" y="0" alignment-baseline="hanging" font-size="128">ðŸ›«</text></svg>')
			no-repeat;
		margin-left: 0.1em;
		vertical-align: middle;
		height: 1em;
		width: 1em;
	}

	.comic code {
		@apply font-code;
	}
}
